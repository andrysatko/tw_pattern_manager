# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type AdditionalCount {
  comments: Int!
}

type Post {
  id: ID!
  title: String!
  content: String!
  Image: [String!]
  Video: String
  createdAt: DateTime!
  author: PublicUser!
  _count: AdditionalCount
  Likes: Int!
  Dislikes: Int!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type MyReactionToPost {
  reaction: String
}

type User {
  id: ID!
  email: String!
  firstName: String
  lastName: String
  phone: String
  password: String!
  subscribed: Boolean
  Avatar: [String!]
  Post: [Post!]
}

type PublicUser {
  id: ID!
  firstName: String
  lastName: String
  Avatar: [String!]
}

type JwtResponse {
  jwt_token: String!
}

type Selected_Posts_with_countModel {
  posts: [Post!]!
  Post_count: Int!
}

type Reply {
  id: ID!
  text: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  userId: String!
  commentId: String!
  likesCount: Int!
  dislikesCount: Int!
}

type Comment {
  id: ID!
  postId: String!
  userId: String!
  text: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  Reply: [Reply!]
  User: PublicUser!
}

type ALLCommentsPaginationOutput {
  comments: [Comment!]!
  TotalCommentsCount: Int!
}

type Query {
  users(id: String, take: Int): [User!]!
  User_info: User!
  GetPostFo__User(userId: String!, take: Int, cursor: String, skip: Int, orderBy: String): Selected_Posts_with_countModel!
  GetMyReactionForPost(_post_id: String!): MyReactionToPost!
  GetPost_Filter(FilterBy: TFilterByEnum = RECENT, Cursor: String): Selected_Posts_with_countModel!
  LatestPosts: Post!
  GetPostById(_id: String!): Post!
  GetComments_ForPost(postId: String!, take: Int, cursor: String, skip: Int, orderBy: String): ALLCommentsPaginationOutput!
}

"""Description for MyEnum"""
enum TFilterByEnum {
  MOST_POPULAR
  RECENT
  OLDEST
}

type Mutation {
  signUp(email: String!, password: String!): User!
  login(email: String!, password: String!): JwtResponse!
  UpdateProfile(email: String, firstName: String, lastName: String, phone: String, password: String, subscribed: Boolean, Avatar: Upload): User!
  DeleteAvatar(avatar_filename: [String!]!): String!
  createPost(title: String!, content: String!, Image: [Upload!], Video: Upload): Post!
  DeleteSelectedPhotos(Images: [String!]!): Post!
  ReactToThePost(postId: String!, reaction: UserRole!): String!
  DeleteReaction(post_id: String!): String!
  createComment(_post_id: String!, reply: String!): Comment!
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

enum UserRole {
  LIKE
  DISLIKE
}